# [doc = "Register `SCU500` reader"] pub type R = crate :: R < Scu500Spec > ; # [doc = "Register `SCU500` writer"] pub type W = crate :: W < Scu500Spec > ; # [doc = "Field `DisARMCM4CPUBootTXD5` reader - Disable ARM CM4 CPU boot (TXD5)"] pub type DisArmcm4cpubootTxd5R = crate :: BitReader ; # [doc = "Field `DisARMCM4CPUBootTXD5` writer - Disable ARM CM4 CPU boot (TXD5)"] pub type DisArmcm4cpubootTxd5W < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `Reserved27` reader - Reserved"] pub type Reserved27R = crate :: FieldReader ; # [doc = "Field `Reserved27` writer - Reserved"] pub type Reserved27W < 'a , REG > = crate :: FieldWriter < 'a , REG , 2 > ; # [doc = "Field `AddrOffsetOfABRSingleChipModehlinkOTPSTRAP3` reader - Address Offset of ABR Single Chip Mode(hlinkOTPSTRAP\\[3\\])"] pub type AddrOffsetOfAbrsingleChipModehlinkOtpstrap3R = crate :: BitReader ; # [doc = "Field `AddrOffsetOfABRSingleChipModehlinkOTPSTRAP3` writer - Address Offset of ABR Single Chip Mode(hlinkOTPSTRAP\\[3\\])"] pub type AddrOffsetOfAbrsingleChipModehlinkOtpstrap3W < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `Reserved26` reader - Reserved (0) (hlinkOTPSTRAP\\[4\\])"] pub type Reserved26R = crate :: BitReader ; # [doc = "Field `Reserved26` writer - Reserved (0) (hlinkOTPSTRAP\\[4\\])"] pub type Reserved26W < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `Reserved25` reader - Reserved (0) (hlinkOTPSTRAP\\[5\\])"] pub type Reserved25R = crate :: BitReader ; # [doc = "Field `Reserved25` writer - Reserved (0) (hlinkOTPSTRAP\\[5\\])"] pub type Reserved25W < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `Reserved24` reader - Reserved (0) (hlinkOTPSTRAP\\[6\\])"] pub type Reserved24R = crate :: BitReader ; # [doc = "Field `Reserved24` writer - Reserved (0) (hlinkOTPSTRAP\\[6\\])"] pub type Reserved24W < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `Reserved23` reader - Reserved (0) (hlinkOTPSTRAP\\[7\\])"] pub type Reserved23R = crate :: BitReader ; # [doc = "Field `Reserved23` writer - Reserved (0) (hlinkOTPSTRAP\\[7\\])"] pub type Reserved23W < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `Reserved22` reader - Reserved (0) (hlinkOTPSTRAP\\[8\\])"] pub type Reserved22R = crate :: BitReader ; # [doc = "Field `Reserved22` writer - Reserved (0) (hlinkOTPSTRAP\\[8\\])"] pub type Reserved22W < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `Reserved21` reader - Reserved (0) (hlinkOTPSTRAP\\[9\\])"] pub type Reserved21R = crate :: BitReader ; # [doc = "Field `Reserved21` writer - Reserved (0) (hlinkOTPSTRAP\\[9\\])"] pub type Reserved21W < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `Reserved20` reader - Reserved (0) (hlinkOTPSTRAP\\[10\\])"] pub type Reserved20R = crate :: BitReader ; # [doc = "Field `Reserved20` writer - Reserved (0) (hlinkOTPSTRAP\\[10\\])"] pub type Reserved20W < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `Reserved19` reader - Reserved (0) (hlinkOTPSTRAP\\[11\\])"] pub type Reserved19R = crate :: BitReader ; # [doc = "Field `Reserved19` writer - Reserved (0) (hlinkOTPSTRAP\\[11\\])"] pub type Reserved19W < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `Reserved18` reader - Reserved (0) (hlinkOTPSTRAP\\[12\\])"] pub type Reserved18R = crate :: BitReader ; # [doc = "Field `Reserved18` writer - Reserved (0) (hlinkOTPSTRAP\\[12\\])"] pub type Reserved18W < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `Reserved17` reader - Reserved (0) (hlinkOTPSTRAP\\[13\\])"] pub type Reserved17R = crate :: BitReader ; # [doc = "Field `Reserved17` writer - Reserved (0) (hlinkOTPSTRAP\\[13\\])"] pub type Reserved17W < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `Reserved16` reader - Reserved (0) (hlinkOTPSTRAP\\[14\\])"] pub type Reserved16R = crate :: BitReader ; # [doc = "Field `Reserved16` writer - Reserved (0) (hlinkOTPSTRAP\\[14\\])"] pub type Reserved16W < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `Reserved15` reader - Reserved (0) (hlinkOTPSTRAP\\[15\\])"] pub type Reserved15R = crate :: BitReader ; # [doc = "Field `Reserved15` writer - Reserved (0) (hlinkOTPSTRAP\\[15\\])"] pub type Reserved15W < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `Reserved14` reader - Reserved (0) (hlinkOTPSTRAP\\[16\\])"] pub type Reserved14R = crate :: BitReader ; # [doc = "Field `Reserved14` writer - Reserved (0) (hlinkOTPSTRAP\\[16\\])"] pub type Reserved14W < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisARMCM4DebugHlinkOTPSTRAP17` reader - Disable ARM CM4 debug (hlinkOTPSTRAP\\[17\\])"] pub type DisArmcm4debugHlinkOtpstrap17R = crate :: BitReader ; # [doc = "Field `DisARMCM4DebugHlinkOTPSTRAP17` writer - Disable ARM CM4 debug (hlinkOTPSTRAP\\[17\\])"] pub type DisArmcm4debugHlinkOtpstrap17W < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `Reserved13` reader - Reserved (0) (hlinkOTPSTRAP\\[18\\])"] pub type Reserved13R = crate :: BitReader ; # [doc = "Field `Reserved13` writer - Reserved (0) (hlinkOTPSTRAP\\[18\\])"] pub type Reserved13W < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `Reserved12` reader - Reserved (0) (hlinkOTPSTRAP\\[19\\])"] pub type Reserved12R = crate :: BitReader ; # [doc = "Field `Reserved12` writer - Reserved (0) (hlinkOTPSTRAP\\[19\\])"] pub type Reserved12W < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `Reserved11` reader - Reserved (0) (hlinkOTPSTRAP\\[20\\])"] pub type Reserved11R = crate :: BitReader ; # [doc = "Field `Reserved11` writer - Reserved (0) (hlinkOTPSTRAP\\[20\\])"] pub type Reserved11W < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `Reserved10` reader - Reserved (0) (hlinkOTPSTRAP\\[21\\])"] pub type Reserved10R = crate :: BitReader ; # [doc = "Field `Reserved10` writer - Reserved (0) (hlinkOTPSTRAP\\[21\\])"] pub type Reserved10W < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `Reserved9` reader - Reserved (0) (hlinkOTPSTRAP\\[22\\])"] pub type Reserved9R = crate :: BitReader ; # [doc = "Field `Reserved9` writer - Reserved (0) (hlinkOTPSTRAP\\[22\\])"] pub type Reserved9W < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `Reserved8` reader - Reserved (0) (hlinkOTPSTRAP\\[23\\])"] pub type Reserved8R = crate :: BitReader ; # [doc = "Field `Reserved8` writer - Reserved (0) (hlinkOTPSTRAP\\[23\\])"] pub type Reserved8W < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `Reserved7` reader - Reserved (0) (hlinkOTPSTRAP\\[24\\])"] pub type Reserved7R = crate :: BitReader ; # [doc = "Field `Reserved7` writer - Reserved (0) (hlinkOTPSTRAP\\[24\\])"] pub type Reserved7W < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `Reserved6` reader - Reserved (0) (hlinkOTPSTRAP\\[25\\])"] pub type Reserved6R = crate :: BitReader ; # [doc = "Field `Reserved6` writer - Reserved (0) (hlinkOTPSTRAP\\[25\\])"] pub type Reserved6W < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `Reserved5` reader - Reserved (0) (hlinkOTPSTRAP\\[26\\])"] pub type Reserved5R = crate :: BitReader ; # [doc = "Field `Reserved5` writer - Reserved (0) (hlinkOTPSTRAP\\[26\\])"] pub type Reserved5W < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `Reserved4` reader - Reserved (0) (hlinkOTPSTRAP\\[27\\])"] pub type Reserved4R = crate :: BitReader ; # [doc = "Field `Reserved4` writer - Reserved (0) (hlinkOTPSTRAP\\[27\\])"] pub type Reserved4W < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `Reserved3` reader - Reserved (0) (hlinkOTPSTRAP\\[28\\])"] pub type Reserved3R = crate :: BitReader ; # [doc = "Field `Reserved3` writer - Reserved (0) (hlinkOTPSTRAP\\[28\\])"] pub type Reserved3W < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `Reserved2` reader - Reserved (0) (hlinkOTPSTRAP\\[29\\])"] pub type Reserved2R = crate :: BitReader ; # [doc = "Field `Reserved2` writer - Reserved (0) (hlinkOTPSTRAP\\[29\\])"] pub type Reserved2W < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `Reserved1` reader - Reserved (0) (hlinkOTPSTRAP\\[30\\])"] pub type Reserved1R = crate :: BitReader ; # [doc = "Field `Reserved1` writer - Reserved (0) (hlinkOTPSTRAP\\[30\\])"] pub type Reserved1W < 'a , REG > = crate :: BitWriter < 'a , REG > ; impl R { # [doc = "Bit 0 - Disable ARM CM4 CPU boot (TXD5)"] # [inline (always)] pub fn dis_armcm4cpuboot_txd5 (& self) -> DisArmcm4cpubootTxd5R { DisArmcm4cpubootTxd5R :: new ((self . bits & 1) != 0) } # [doc = "Bits 1:2 - Reserved"] # [inline (always)] pub fn reserved27 (& self) -> Reserved27R { Reserved27R :: new (((self . bits >> 1) & 3) as u8) } # [doc = "Bit 3 - Address Offset of ABR Single Chip Mode(hlinkOTPSTRAP\\[3\\])"] # [inline (always)] pub fn addr_offset_of_abrsingle_chip_modehlink_otpstrap3 (& self) -> AddrOffsetOfAbrsingleChipModehlinkOtpstrap3R { AddrOffsetOfAbrsingleChipModehlinkOtpstrap3R :: new (((self . bits >> 3) & 1) != 0) } # [doc = "Bit 4 - Reserved (0) (hlinkOTPSTRAP\\[4\\])"] # [inline (always)] pub fn reserved26 (& self) -> Reserved26R { Reserved26R :: new (((self . bits >> 4) & 1) != 0) } # [doc = "Bit 5 - Reserved (0) (hlinkOTPSTRAP\\[5\\])"] # [inline (always)] pub fn reserved25 (& self) -> Reserved25R { Reserved25R :: new (((self . bits >> 5) & 1) != 0) } # [doc = "Bit 6 - Reserved (0) (hlinkOTPSTRAP\\[6\\])"] # [inline (always)] pub fn reserved24 (& self) -> Reserved24R { Reserved24R :: new (((self . bits >> 6) & 1) != 0) } # [doc = "Bit 7 - Reserved (0) (hlinkOTPSTRAP\\[7\\])"] # [inline (always)] pub fn reserved23 (& self) -> Reserved23R { Reserved23R :: new (((self . bits >> 7) & 1) != 0) } # [doc = "Bit 8 - Reserved (0) (hlinkOTPSTRAP\\[8\\])"] # [inline (always)] pub fn reserved22 (& self) -> Reserved22R { Reserved22R :: new (((self . bits >> 8) & 1) != 0) } # [doc = "Bit 9 - Reserved (0) (hlinkOTPSTRAP\\[9\\])"] # [inline (always)] pub fn reserved21 (& self) -> Reserved21R { Reserved21R :: new (((self . bits >> 9) & 1) != 0) } # [doc = "Bit 10 - Reserved (0) (hlinkOTPSTRAP\\[10\\])"] # [inline (always)] pub fn reserved20 (& self) -> Reserved20R { Reserved20R :: new (((self . bits >> 10) & 1) != 0) } # [doc = "Bit 11 - Reserved (0) (hlinkOTPSTRAP\\[11\\])"] # [inline (always)] pub fn reserved19 (& self) -> Reserved19R { Reserved19R :: new (((self . bits >> 11) & 1) != 0) } # [doc = "Bit 12 - Reserved (0) (hlinkOTPSTRAP\\[12\\])"] # [inline (always)] pub fn reserved18 (& self) -> Reserved18R { Reserved18R :: new (((self . bits >> 12) & 1) != 0) } # [doc = "Bit 13 - Reserved (0) (hlinkOTPSTRAP\\[13\\])"] # [inline (always)] pub fn reserved17 (& self) -> Reserved17R { Reserved17R :: new (((self . bits >> 13) & 1) != 0) } # [doc = "Bit 14 - Reserved (0) (hlinkOTPSTRAP\\[14\\])"] # [inline (always)] pub fn reserved16 (& self) -> Reserved16R { Reserved16R :: new (((self . bits >> 14) & 1) != 0) } # [doc = "Bit 15 - Reserved (0) (hlinkOTPSTRAP\\[15\\])"] # [inline (always)] pub fn reserved15 (& self) -> Reserved15R { Reserved15R :: new (((self . bits >> 15) & 1) != 0) } # [doc = "Bit 16 - Reserved (0) (hlinkOTPSTRAP\\[16\\])"] # [inline (always)] pub fn reserved14 (& self) -> Reserved14R { Reserved14R :: new (((self . bits >> 16) & 1) != 0) } # [doc = "Bit 17 - Disable ARM CM4 debug (hlinkOTPSTRAP\\[17\\])"] # [inline (always)] pub fn dis_armcm4debug_hlink_otpstrap17 (& self) -> DisArmcm4debugHlinkOtpstrap17R { DisArmcm4debugHlinkOtpstrap17R :: new (((self . bits >> 17) & 1) != 0) } # [doc = "Bit 18 - Reserved (0) (hlinkOTPSTRAP\\[18\\])"] # [inline (always)] pub fn reserved13 (& self) -> Reserved13R { Reserved13R :: new (((self . bits >> 18) & 1) != 0) } # [doc = "Bit 19 - Reserved (0) (hlinkOTPSTRAP\\[19\\])"] # [inline (always)] pub fn reserved12 (& self) -> Reserved12R { Reserved12R :: new (((self . bits >> 19) & 1) != 0) } # [doc = "Bit 20 - Reserved (0) (hlinkOTPSTRAP\\[20\\])"] # [inline (always)] pub fn reserved11 (& self) -> Reserved11R { Reserved11R :: new (((self . bits >> 20) & 1) != 0) } # [doc = "Bit 21 - Reserved (0) (hlinkOTPSTRAP\\[21\\])"] # [inline (always)] pub fn reserved10 (& self) -> Reserved10R { Reserved10R :: new (((self . bits >> 21) & 1) != 0) } # [doc = "Bit 22 - Reserved (0) (hlinkOTPSTRAP\\[22\\])"] # [inline (always)] pub fn reserved9 (& self) -> Reserved9R { Reserved9R :: new (((self . bits >> 22) & 1) != 0) } # [doc = "Bit 23 - Reserved (0) (hlinkOTPSTRAP\\[23\\])"] # [inline (always)] pub fn reserved8 (& self) -> Reserved8R { Reserved8R :: new (((self . bits >> 23) & 1) != 0) } # [doc = "Bit 24 - Reserved (0) (hlinkOTPSTRAP\\[24\\])"] # [inline (always)] pub fn reserved7 (& self) -> Reserved7R { Reserved7R :: new (((self . bits >> 24) & 1) != 0) } # [doc = "Bit 25 - Reserved (0) (hlinkOTPSTRAP\\[25\\])"] # [inline (always)] pub fn reserved6 (& self) -> Reserved6R { Reserved6R :: new (((self . bits >> 25) & 1) != 0) } # [doc = "Bit 26 - Reserved (0) (hlinkOTPSTRAP\\[26\\])"] # [inline (always)] pub fn reserved5 (& self) -> Reserved5R { Reserved5R :: new (((self . bits >> 26) & 1) != 0) } # [doc = "Bit 27 - Reserved (0) (hlinkOTPSTRAP\\[27\\])"] # [inline (always)] pub fn reserved4 (& self) -> Reserved4R { Reserved4R :: new (((self . bits >> 27) & 1) != 0) } # [doc = "Bit 28 - Reserved (0) (hlinkOTPSTRAP\\[28\\])"] # [inline (always)] pub fn reserved3 (& self) -> Reserved3R { Reserved3R :: new (((self . bits >> 28) & 1) != 0) } # [doc = "Bit 29 - Reserved (0) (hlinkOTPSTRAP\\[29\\])"] # [inline (always)] pub fn reserved2 (& self) -> Reserved2R { Reserved2R :: new (((self . bits >> 29) & 1) != 0) } # [doc = "Bit 30 - Reserved (0) (hlinkOTPSTRAP\\[30\\])"] # [inline (always)] pub fn reserved1 (& self) -> Reserved1R { Reserved1R :: new (((self . bits >> 30) & 1) != 0) } } impl W { # [doc = "Bit 0 - Disable ARM CM4 CPU boot (TXD5)"] # [inline (always)] pub fn dis_armcm4cpuboot_txd5 (& mut self) -> DisArmcm4cpubootTxd5W < Scu500Spec > { DisArmcm4cpubootTxd5W :: new (self , 0) } # [doc = "Bits 1:2 - Reserved"] # [inline (always)] pub fn reserved27 (& mut self) -> Reserved27W < Scu500Spec > { Reserved27W :: new (self , 1) } # [doc = "Bit 3 - Address Offset of ABR Single Chip Mode(hlinkOTPSTRAP\\[3\\])"] # [inline (always)] pub fn addr_offset_of_abrsingle_chip_modehlink_otpstrap3 (& mut self) -> AddrOffsetOfAbrsingleChipModehlinkOtpstrap3W < Scu500Spec > { AddrOffsetOfAbrsingleChipModehlinkOtpstrap3W :: new (self , 3) } # [doc = "Bit 4 - Reserved (0) (hlinkOTPSTRAP\\[4\\])"] # [inline (always)] pub fn reserved26 (& mut self) -> Reserved26W < Scu500Spec > { Reserved26W :: new (self , 4) } # [doc = "Bit 5 - Reserved (0) (hlinkOTPSTRAP\\[5\\])"] # [inline (always)] pub fn reserved25 (& mut self) -> Reserved25W < Scu500Spec > { Reserved25W :: new (self , 5) } # [doc = "Bit 6 - Reserved (0) (hlinkOTPSTRAP\\[6\\])"] # [inline (always)] pub fn reserved24 (& mut self) -> Reserved24W < Scu500Spec > { Reserved24W :: new (self , 6) } # [doc = "Bit 7 - Reserved (0) (hlinkOTPSTRAP\\[7\\])"] # [inline (always)] pub fn reserved23 (& mut self) -> Reserved23W < Scu500Spec > { Reserved23W :: new (self , 7) } # [doc = "Bit 8 - Reserved (0) (hlinkOTPSTRAP\\[8\\])"] # [inline (always)] pub fn reserved22 (& mut self) -> Reserved22W < Scu500Spec > { Reserved22W :: new (self , 8) } # [doc = "Bit 9 - Reserved (0) (hlinkOTPSTRAP\\[9\\])"] # [inline (always)] pub fn reserved21 (& mut self) -> Reserved21W < Scu500Spec > { Reserved21W :: new (self , 9) } # [doc = "Bit 10 - Reserved (0) (hlinkOTPSTRAP\\[10\\])"] # [inline (always)] pub fn reserved20 (& mut self) -> Reserved20W < Scu500Spec > { Reserved20W :: new (self , 10) } # [doc = "Bit 11 - Reserved (0) (hlinkOTPSTRAP\\[11\\])"] # [inline (always)] pub fn reserved19 (& mut self) -> Reserved19W < Scu500Spec > { Reserved19W :: new (self , 11) } # [doc = "Bit 12 - Reserved (0) (hlinkOTPSTRAP\\[12\\])"] # [inline (always)] pub fn reserved18 (& mut self) -> Reserved18W < Scu500Spec > { Reserved18W :: new (self , 12) } # [doc = "Bit 13 - Reserved (0) (hlinkOTPSTRAP\\[13\\])"] # [inline (always)] pub fn reserved17 (& mut self) -> Reserved17W < Scu500Spec > { Reserved17W :: new (self , 13) } # [doc = "Bit 14 - Reserved (0) (hlinkOTPSTRAP\\[14\\])"] # [inline (always)] pub fn reserved16 (& mut self) -> Reserved16W < Scu500Spec > { Reserved16W :: new (self , 14) } # [doc = "Bit 15 - Reserved (0) (hlinkOTPSTRAP\\[15\\])"] # [inline (always)] pub fn reserved15 (& mut self) -> Reserved15W < Scu500Spec > { Reserved15W :: new (self , 15) } # [doc = "Bit 16 - Reserved (0) (hlinkOTPSTRAP\\[16\\])"] # [inline (always)] pub fn reserved14 (& mut self) -> Reserved14W < Scu500Spec > { Reserved14W :: new (self , 16) } # [doc = "Bit 17 - Disable ARM CM4 debug (hlinkOTPSTRAP\\[17\\])"] # [inline (always)] pub fn dis_armcm4debug_hlink_otpstrap17 (& mut self) -> DisArmcm4debugHlinkOtpstrap17W < Scu500Spec > { DisArmcm4debugHlinkOtpstrap17W :: new (self , 17) } # [doc = "Bit 18 - Reserved (0) (hlinkOTPSTRAP\\[18\\])"] # [inline (always)] pub fn reserved13 (& mut self) -> Reserved13W < Scu500Spec > { Reserved13W :: new (self , 18) } # [doc = "Bit 19 - Reserved (0) (hlinkOTPSTRAP\\[19\\])"] # [inline (always)] pub fn reserved12 (& mut self) -> Reserved12W < Scu500Spec > { Reserved12W :: new (self , 19) } # [doc = "Bit 20 - Reserved (0) (hlinkOTPSTRAP\\[20\\])"] # [inline (always)] pub fn reserved11 (& mut self) -> Reserved11W < Scu500Spec > { Reserved11W :: new (self , 20) } # [doc = "Bit 21 - Reserved (0) (hlinkOTPSTRAP\\[21\\])"] # [inline (always)] pub fn reserved10 (& mut self) -> Reserved10W < Scu500Spec > { Reserved10W :: new (self , 21) } # [doc = "Bit 22 - Reserved (0) (hlinkOTPSTRAP\\[22\\])"] # [inline (always)] pub fn reserved9 (& mut self) -> Reserved9W < Scu500Spec > { Reserved9W :: new (self , 22) } # [doc = "Bit 23 - Reserved (0) (hlinkOTPSTRAP\\[23\\])"] # [inline (always)] pub fn reserved8 (& mut self) -> Reserved8W < Scu500Spec > { Reserved8W :: new (self , 23) } # [doc = "Bit 24 - Reserved (0) (hlinkOTPSTRAP\\[24\\])"] # [inline (always)] pub fn reserved7 (& mut self) -> Reserved7W < Scu500Spec > { Reserved7W :: new (self , 24) } # [doc = "Bit 25 - Reserved (0) (hlinkOTPSTRAP\\[25\\])"] # [inline (always)] pub fn reserved6 (& mut self) -> Reserved6W < Scu500Spec > { Reserved6W :: new (self , 25) } # [doc = "Bit 26 - Reserved (0) (hlinkOTPSTRAP\\[26\\])"] # [inline (always)] pub fn reserved5 (& mut self) -> Reserved5W < Scu500Spec > { Reserved5W :: new (self , 26) } # [doc = "Bit 27 - Reserved (0) (hlinkOTPSTRAP\\[27\\])"] # [inline (always)] pub fn reserved4 (& mut self) -> Reserved4W < Scu500Spec > { Reserved4W :: new (self , 27) } # [doc = "Bit 28 - Reserved (0) (hlinkOTPSTRAP\\[28\\])"] # [inline (always)] pub fn reserved3 (& mut self) -> Reserved3W < Scu500Spec > { Reserved3W :: new (self , 28) } # [doc = "Bit 29 - Reserved (0) (hlinkOTPSTRAP\\[29\\])"] # [inline (always)] pub fn reserved2 (& mut self) -> Reserved2W < Scu500Spec > { Reserved2W :: new (self , 29) } # [doc = "Bit 30 - Reserved (0) (hlinkOTPSTRAP\\[30\\])"] # [inline (always)] pub fn reserved1 (& mut self) -> Reserved1W < Scu500Spec > { Reserved1W :: new (self , 30) } } # [doc = "Hardware Strap1 Register\\label{SCUREG:HWTRAPL\n\nYou can [`read`](crate::Reg::read) this register and get [`scu500::R`](R). You can [`reset`](crate::Reg::reset), [`write`](crate::Reg::write), [`write_with_zero`](crate::Reg::write_with_zero) this register using [`scu500::W`](W). You can also [`modify`](crate::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct Scu500Spec ; impl crate :: RegisterSpec for Scu500Spec { type Ux = u32 ; } # [doc = "`read()` method returns [`scu500::R`](R) reader structure"] impl crate :: Readable for Scu500Spec { } # [doc = "`write(|w| ..)` method takes [`scu500::W`](W) writer structure"] impl crate :: Writable for Scu500Spec { type Safety = crate :: Unsafe ; } # [doc = "`reset()` method sets SCU500 to value 0"] impl crate :: Resettable for Scu500Spec { }