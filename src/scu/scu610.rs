# [doc = "Register `SCU610` reader"] pub type R = crate :: R < Scu610Spec > ; # [doc = "Register `SCU610` writer"] pub type W = crate :: W < Scu610Spec > ; # [doc = "Field `DisGPIOA0IntPullDown` reader - Disable GPIOA0 Internal Pull-Down"] pub type DisGpioa0intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOA0IntPullDown` writer - Disable GPIOA0 Internal Pull-Down"] pub type DisGpioa0intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOA1IntPullDown` reader - Disable GPIOA1 Internal Pull-Down"] pub type DisGpioa1intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOA1IntPullDown` writer - Disable GPIOA1 Internal Pull-Down"] pub type DisGpioa1intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOA2IntPullDown` reader - Disable GPIOA2 Internal Pull-Down"] pub type DisGpioa2intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOA2IntPullDown` writer - Disable GPIOA2 Internal Pull-Down"] pub type DisGpioa2intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOA3IntPullDown` reader - Disable GPIOA3 Internal Pull-Down"] pub type DisGpioa3intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOA3IntPullDown` writer - Disable GPIOA3 Internal Pull-Down"] pub type DisGpioa3intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOA4IntPullDown` reader - Disable GPIOA4 Internal Pull-Down"] pub type DisGpioa4intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOA4IntPullDown` writer - Disable GPIOA4 Internal Pull-Down"] pub type DisGpioa4intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOA5IntPullDown` reader - Disable GPIOA5 Internal Pull-Down"] pub type DisGpioa5intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOA5IntPullDown` writer - Disable GPIOA5 Internal Pull-Down"] pub type DisGpioa5intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOA6IntPullDown` reader - Disable GPIOA6 Internal Pull-Down"] pub type DisGpioa6intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOA6IntPullDown` writer - Disable GPIOA6 Internal Pull-Down"] pub type DisGpioa6intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOA7IntPullDown` reader - Disable GPIOA7 Internal Pull-Down"] pub type DisGpioa7intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOA7IntPullDown` writer - Disable GPIOA7 Internal Pull-Down"] pub type DisGpioa7intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOB0IntPullDown` reader - Disable GPIOB0 Internal Pull-Down"] pub type DisGpiob0intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOB0IntPullDown` writer - Disable GPIOB0 Internal Pull-Down"] pub type DisGpiob0intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOB1IntPullDown` reader - Disable GPIOB1 Internal Pull-Down"] pub type DisGpiob1intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOB1IntPullDown` writer - Disable GPIOB1 Internal Pull-Down"] pub type DisGpiob1intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOB2IntPullDown` reader - Disable GPIOB2 Internal Pull-Down"] pub type DisGpiob2intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOB2IntPullDown` writer - Disable GPIOB2 Internal Pull-Down"] pub type DisGpiob2intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOB3IntPullDown` reader - Disable GPIOB3 Internal Pull-Down"] pub type DisGpiob3intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOB3IntPullDown` writer - Disable GPIOB3 Internal Pull-Down"] pub type DisGpiob3intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOB4IntPullDown` reader - Disable GPIOB4 Internal Pull-Down"] pub type DisGpiob4intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOB4IntPullDown` writer - Disable GPIOB4 Internal Pull-Down"] pub type DisGpiob4intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOB5IntPullDown` reader - Disable GPIOB5 Internal Pull-Down"] pub type DisGpiob5intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOB5IntPullDown` writer - Disable GPIOB5 Internal Pull-Down"] pub type DisGpiob5intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOB6IntPullDown` reader - Disable GPIOB6 Internal Pull-Down"] pub type DisGpiob6intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOB6IntPullDown` writer - Disable GPIOB6 Internal Pull-Down"] pub type DisGpiob6intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOB7IntPullDown` reader - Disable GPIOB7 Internal Pull-Down"] pub type DisGpiob7intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOB7IntPullDown` writer - Disable GPIOB7 Internal Pull-Down"] pub type DisGpiob7intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOC0IntPullDown` reader - Disable GPIOC0 Internal Pull-Down"] pub type DisGpioc0intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOC0IntPullDown` writer - Disable GPIOC0 Internal Pull-Down"] pub type DisGpioc0intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOC1IntPullDown` reader - Disable GPIOC1 Internal Pull-Down"] pub type DisGpioc1intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOC1IntPullDown` writer - Disable GPIOC1 Internal Pull-Down"] pub type DisGpioc1intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOC2IntPullDown` reader - Disable GPIOC2 Internal Pull-Down"] pub type DisGpioc2intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOC2IntPullDown` writer - Disable GPIOC2 Internal Pull-Down"] pub type DisGpioc2intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOC3IntPullDown` reader - Disable GPIOC3 Internal Pull-Down"] pub type DisGpioc3intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOC3IntPullDown` writer - Disable GPIOC3 Internal Pull-Down"] pub type DisGpioc3intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOC4IntPullDown` reader - Disable GPIOC4 Internal Pull-Down"] pub type DisGpioc4intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOC4IntPullDown` writer - Disable GPIOC4 Internal Pull-Down"] pub type DisGpioc4intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOC5IntPullDown` reader - Disable GPIOC5 Internal Pull-Down"] pub type DisGpioc5intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOC5IntPullDown` writer - Disable GPIOC5 Internal Pull-Down"] pub type DisGpioc5intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOC6IntPullDown` reader - Disable GPIOC6 Internal Pull-Down"] pub type DisGpioc6intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOC6IntPullDown` writer - Disable GPIOC6 Internal Pull-Down"] pub type DisGpioc6intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOC7IntPullDown` reader - Disable GPIOC7 Internal Pull-Down"] pub type DisGpioc7intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOC7IntPullDown` writer - Disable GPIOC7 Internal Pull-Down"] pub type DisGpioc7intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOD0IntPullDown` reader - Disable GPIOD0 Internal Pull-Down"] pub type DisGpiod0intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOD0IntPullDown` writer - Disable GPIOD0 Internal Pull-Down"] pub type DisGpiod0intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOD1IntPullDown` reader - Disable GPIOD1 Internal Pull-Down"] pub type DisGpiod1intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOD1IntPullDown` writer - Disable GPIOD1 Internal Pull-Down"] pub type DisGpiod1intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOD2IntPullDown` reader - Disable GPIOD2 Internal Pull-Down"] pub type DisGpiod2intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOD2IntPullDown` writer - Disable GPIOD2 Internal Pull-Down"] pub type DisGpiod2intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOD3IntPullDown` reader - Disable GPIOD3 Internal Pull-Down"] pub type DisGpiod3intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOD3IntPullDown` writer - Disable GPIOD3 Internal Pull-Down"] pub type DisGpiod3intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; impl R { # [doc = "Bit 0 - Disable GPIOA0 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioa0int_pull_down (& self) -> DisGpioa0intPullDownR { DisGpioa0intPullDownR :: new ((self . bits & 1) != 0) } # [doc = "Bit 1 - Disable GPIOA1 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioa1int_pull_down (& self) -> DisGpioa1intPullDownR { DisGpioa1intPullDownR :: new (((self . bits >> 1) & 1) != 0) } # [doc = "Bit 2 - Disable GPIOA2 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioa2int_pull_down (& self) -> DisGpioa2intPullDownR { DisGpioa2intPullDownR :: new (((self . bits >> 2) & 1) != 0) } # [doc = "Bit 3 - Disable GPIOA3 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioa3int_pull_down (& self) -> DisGpioa3intPullDownR { DisGpioa3intPullDownR :: new (((self . bits >> 3) & 1) != 0) } # [doc = "Bit 4 - Disable GPIOA4 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioa4int_pull_down (& self) -> DisGpioa4intPullDownR { DisGpioa4intPullDownR :: new (((self . bits >> 4) & 1) != 0) } # [doc = "Bit 5 - Disable GPIOA5 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioa5int_pull_down (& self) -> DisGpioa5intPullDownR { DisGpioa5intPullDownR :: new (((self . bits >> 5) & 1) != 0) } # [doc = "Bit 6 - Disable GPIOA6 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioa6int_pull_down (& self) -> DisGpioa6intPullDownR { DisGpioa6intPullDownR :: new (((self . bits >> 6) & 1) != 0) } # [doc = "Bit 7 - Disable GPIOA7 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioa7int_pull_down (& self) -> DisGpioa7intPullDownR { DisGpioa7intPullDownR :: new (((self . bits >> 7) & 1) != 0) } # [doc = "Bit 8 - Disable GPIOB0 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiob0int_pull_down (& self) -> DisGpiob0intPullDownR { DisGpiob0intPullDownR :: new (((self . bits >> 8) & 1) != 0) } # [doc = "Bit 9 - Disable GPIOB1 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiob1int_pull_down (& self) -> DisGpiob1intPullDownR { DisGpiob1intPullDownR :: new (((self . bits >> 9) & 1) != 0) } # [doc = "Bit 10 - Disable GPIOB2 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiob2int_pull_down (& self) -> DisGpiob2intPullDownR { DisGpiob2intPullDownR :: new (((self . bits >> 10) & 1) != 0) } # [doc = "Bit 11 - Disable GPIOB3 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiob3int_pull_down (& self) -> DisGpiob3intPullDownR { DisGpiob3intPullDownR :: new (((self . bits >> 11) & 1) != 0) } # [doc = "Bit 12 - Disable GPIOB4 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiob4int_pull_down (& self) -> DisGpiob4intPullDownR { DisGpiob4intPullDownR :: new (((self . bits >> 12) & 1) != 0) } # [doc = "Bit 13 - Disable GPIOB5 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiob5int_pull_down (& self) -> DisGpiob5intPullDownR { DisGpiob5intPullDownR :: new (((self . bits >> 13) & 1) != 0) } # [doc = "Bit 14 - Disable GPIOB6 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiob6int_pull_down (& self) -> DisGpiob6intPullDownR { DisGpiob6intPullDownR :: new (((self . bits >> 14) & 1) != 0) } # [doc = "Bit 15 - Disable GPIOB7 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiob7int_pull_down (& self) -> DisGpiob7intPullDownR { DisGpiob7intPullDownR :: new (((self . bits >> 15) & 1) != 0) } # [doc = "Bit 16 - Disable GPIOC0 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioc0int_pull_down (& self) -> DisGpioc0intPullDownR { DisGpioc0intPullDownR :: new (((self . bits >> 16) & 1) != 0) } # [doc = "Bit 17 - Disable GPIOC1 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioc1int_pull_down (& self) -> DisGpioc1intPullDownR { DisGpioc1intPullDownR :: new (((self . bits >> 17) & 1) != 0) } # [doc = "Bit 18 - Disable GPIOC2 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioc2int_pull_down (& self) -> DisGpioc2intPullDownR { DisGpioc2intPullDownR :: new (((self . bits >> 18) & 1) != 0) } # [doc = "Bit 19 - Disable GPIOC3 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioc3int_pull_down (& self) -> DisGpioc3intPullDownR { DisGpioc3intPullDownR :: new (((self . bits >> 19) & 1) != 0) } # [doc = "Bit 20 - Disable GPIOC4 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioc4int_pull_down (& self) -> DisGpioc4intPullDownR { DisGpioc4intPullDownR :: new (((self . bits >> 20) & 1) != 0) } # [doc = "Bit 21 - Disable GPIOC5 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioc5int_pull_down (& self) -> DisGpioc5intPullDownR { DisGpioc5intPullDownR :: new (((self . bits >> 21) & 1) != 0) } # [doc = "Bit 22 - Disable GPIOC6 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioc6int_pull_down (& self) -> DisGpioc6intPullDownR { DisGpioc6intPullDownR :: new (((self . bits >> 22) & 1) != 0) } # [doc = "Bit 23 - Disable GPIOC7 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioc7int_pull_down (& self) -> DisGpioc7intPullDownR { DisGpioc7intPullDownR :: new (((self . bits >> 23) & 1) != 0) } # [doc = "Bit 24 - Disable GPIOD0 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiod0int_pull_down (& self) -> DisGpiod0intPullDownR { DisGpiod0intPullDownR :: new (((self . bits >> 24) & 1) != 0) } # [doc = "Bit 25 - Disable GPIOD1 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiod1int_pull_down (& self) -> DisGpiod1intPullDownR { DisGpiod1intPullDownR :: new (((self . bits >> 25) & 1) != 0) } # [doc = "Bit 26 - Disable GPIOD2 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiod2int_pull_down (& self) -> DisGpiod2intPullDownR { DisGpiod2intPullDownR :: new (((self . bits >> 26) & 1) != 0) } # [doc = "Bit 27 - Disable GPIOD3 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiod3int_pull_down (& self) -> DisGpiod3intPullDownR { DisGpiod3intPullDownR :: new (((self . bits >> 27) & 1) != 0) } } impl W { # [doc = "Bit 0 - Disable GPIOA0 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioa0int_pull_down (& mut self) -> DisGpioa0intPullDownW < Scu610Spec > { DisGpioa0intPullDownW :: new (self , 0) } # [doc = "Bit 1 - Disable GPIOA1 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioa1int_pull_down (& mut self) -> DisGpioa1intPullDownW < Scu610Spec > { DisGpioa1intPullDownW :: new (self , 1) } # [doc = "Bit 2 - Disable GPIOA2 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioa2int_pull_down (& mut self) -> DisGpioa2intPullDownW < Scu610Spec > { DisGpioa2intPullDownW :: new (self , 2) } # [doc = "Bit 3 - Disable GPIOA3 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioa3int_pull_down (& mut self) -> DisGpioa3intPullDownW < Scu610Spec > { DisGpioa3intPullDownW :: new (self , 3) } # [doc = "Bit 4 - Disable GPIOA4 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioa4int_pull_down (& mut self) -> DisGpioa4intPullDownW < Scu610Spec > { DisGpioa4intPullDownW :: new (self , 4) } # [doc = "Bit 5 - Disable GPIOA5 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioa5int_pull_down (& mut self) -> DisGpioa5intPullDownW < Scu610Spec > { DisGpioa5intPullDownW :: new (self , 5) } # [doc = "Bit 6 - Disable GPIOA6 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioa6int_pull_down (& mut self) -> DisGpioa6intPullDownW < Scu610Spec > { DisGpioa6intPullDownW :: new (self , 6) } # [doc = "Bit 7 - Disable GPIOA7 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioa7int_pull_down (& mut self) -> DisGpioa7intPullDownW < Scu610Spec > { DisGpioa7intPullDownW :: new (self , 7) } # [doc = "Bit 8 - Disable GPIOB0 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiob0int_pull_down (& mut self) -> DisGpiob0intPullDownW < Scu610Spec > { DisGpiob0intPullDownW :: new (self , 8) } # [doc = "Bit 9 - Disable GPIOB1 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiob1int_pull_down (& mut self) -> DisGpiob1intPullDownW < Scu610Spec > { DisGpiob1intPullDownW :: new (self , 9) } # [doc = "Bit 10 - Disable GPIOB2 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiob2int_pull_down (& mut self) -> DisGpiob2intPullDownW < Scu610Spec > { DisGpiob2intPullDownW :: new (self , 10) } # [doc = "Bit 11 - Disable GPIOB3 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiob3int_pull_down (& mut self) -> DisGpiob3intPullDownW < Scu610Spec > { DisGpiob3intPullDownW :: new (self , 11) } # [doc = "Bit 12 - Disable GPIOB4 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiob4int_pull_down (& mut self) -> DisGpiob4intPullDownW < Scu610Spec > { DisGpiob4intPullDownW :: new (self , 12) } # [doc = "Bit 13 - Disable GPIOB5 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiob5int_pull_down (& mut self) -> DisGpiob5intPullDownW < Scu610Spec > { DisGpiob5intPullDownW :: new (self , 13) } # [doc = "Bit 14 - Disable GPIOB6 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiob6int_pull_down (& mut self) -> DisGpiob6intPullDownW < Scu610Spec > { DisGpiob6intPullDownW :: new (self , 14) } # [doc = "Bit 15 - Disable GPIOB7 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiob7int_pull_down (& mut self) -> DisGpiob7intPullDownW < Scu610Spec > { DisGpiob7intPullDownW :: new (self , 15) } # [doc = "Bit 16 - Disable GPIOC0 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioc0int_pull_down (& mut self) -> DisGpioc0intPullDownW < Scu610Spec > { DisGpioc0intPullDownW :: new (self , 16) } # [doc = "Bit 17 - Disable GPIOC1 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioc1int_pull_down (& mut self) -> DisGpioc1intPullDownW < Scu610Spec > { DisGpioc1intPullDownW :: new (self , 17) } # [doc = "Bit 18 - Disable GPIOC2 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioc2int_pull_down (& mut self) -> DisGpioc2intPullDownW < Scu610Spec > { DisGpioc2intPullDownW :: new (self , 18) } # [doc = "Bit 19 - Disable GPIOC3 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioc3int_pull_down (& mut self) -> DisGpioc3intPullDownW < Scu610Spec > { DisGpioc3intPullDownW :: new (self , 19) } # [doc = "Bit 20 - Disable GPIOC4 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioc4int_pull_down (& mut self) -> DisGpioc4intPullDownW < Scu610Spec > { DisGpioc4intPullDownW :: new (self , 20) } # [doc = "Bit 21 - Disable GPIOC5 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioc5int_pull_down (& mut self) -> DisGpioc5intPullDownW < Scu610Spec > { DisGpioc5intPullDownW :: new (self , 21) } # [doc = "Bit 22 - Disable GPIOC6 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioc6int_pull_down (& mut self) -> DisGpioc6intPullDownW < Scu610Spec > { DisGpioc6intPullDownW :: new (self , 22) } # [doc = "Bit 23 - Disable GPIOC7 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioc7int_pull_down (& mut self) -> DisGpioc7intPullDownW < Scu610Spec > { DisGpioc7intPullDownW :: new (self , 23) } # [doc = "Bit 24 - Disable GPIOD0 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiod0int_pull_down (& mut self) -> DisGpiod0intPullDownW < Scu610Spec > { DisGpiod0intPullDownW :: new (self , 24) } # [doc = "Bit 25 - Disable GPIOD1 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiod1int_pull_down (& mut self) -> DisGpiod1intPullDownW < Scu610Spec > { DisGpiod1intPullDownW :: new (self , 25) } # [doc = "Bit 26 - Disable GPIOD2 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiod2int_pull_down (& mut self) -> DisGpiod2intPullDownW < Scu610Spec > { DisGpiod2intPullDownW :: new (self , 26) } # [doc = "Bit 27 - Disable GPIOD3 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiod3int_pull_down (& mut self) -> DisGpiod3intPullDownW < Scu610Spec > { DisGpiod3intPullDownW :: new (self , 27) } } # [doc = "Disable GPIO Internal Pull-Down \\#0\n\nYou can [`read`](crate::Reg::read) this register and get [`scu610::R`](R). You can [`reset`](crate::Reg::reset), [`write`](crate::Reg::write), [`write_with_zero`](crate::Reg::write_with_zero) this register using [`scu610::W`](W). You can also [`modify`](crate::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct Scu610Spec ; impl crate :: RegisterSpec for Scu610Spec { type Ux = u32 ; } # [doc = "`read()` method returns [`scu610::R`](R) reader structure"] impl crate :: Readable for Scu610Spec { } # [doc = "`write(|w| ..)` method takes [`scu610::W`](W) writer structure"] impl crate :: Writable for Scu610Spec { type Safety = crate :: Unsafe ; } # [doc = "`reset()` method sets SCU610 to value 0"] impl crate :: Resettable for Scu610Spec { }