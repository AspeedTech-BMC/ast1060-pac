# [doc = "Register `SCU4B8` reader"] pub type R = crate :: R < Scu4b8Spec > ; # [doc = "Register `SCU4B8` writer"] pub type W = crate :: W < Scu4b8Spec > ; # [doc = "Field `Reserved1` reader - Reserved"] pub type Reserved1R = crate :: FieldReader ; # [doc = "Field `Reserved1` writer - Reserved"] pub type Reserved1W < 'a , REG > = crate :: FieldWriter < 'a , REG , 8 > ; # [doc = "Field `EnblI3CSCL1HVFnPin` reader - Enable I3C SCL1 HV function pin"] pub type EnblI3cscl1hvfnPinR = crate :: BitReader ; # [doc = "Field `EnblI3CSCL1HVFnPin` writer - Enable I3C SCL1 HV function pin"] pub type EnblI3cscl1hvfnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblI3CSDA1HVFnPin` reader - Enable I3C SDA1 HV function pin"] pub type EnblI3csda1hvfnPinR = crate :: BitReader ; # [doc = "Field `EnblI3CSDA1HVFnPin` writer - Enable I3C SDA1 HV function pin"] pub type EnblI3csda1hvfnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblI3CSCL2HVFnPin` reader - Enable I3C SCL2 HV function pin"] pub type EnblI3cscl2hvfnPinR = crate :: BitReader ; # [doc = "Field `EnblI3CSCL2HVFnPin` writer - Enable I3C SCL2 HV function pin"] pub type EnblI3cscl2hvfnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblI3CSDA2HVFnPin` reader - Enable I3C SDA2 HV function pin"] pub type EnblI3csda2hvfnPinR = crate :: BitReader ; # [doc = "Field `EnblI3CSDA2HVFnPin` writer - Enable I3C SDA2 HV function pin"] pub type EnblI3csda2hvfnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblI3CSCL3HVFnPin` reader - Enable I3C SCL3 HV function pin"] pub type EnblI3cscl3hvfnPinR = crate :: BitReader ; # [doc = "Field `EnblI3CSCL3HVFnPin` writer - Enable I3C SCL3 HV function pin"] pub type EnblI3cscl3hvfnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblI3CSDA3HVFnPin` reader - Enable I3C SDA3 HV function pin"] pub type EnblI3csda3hvfnPinR = crate :: BitReader ; # [doc = "Field `EnblI3CSDA3HVFnPin` writer - Enable I3C SDA3 HV function pin"] pub type EnblI3csda3hvfnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblI3CSCL4HVFnPin` reader - Enable I3C SCL4 HV function pin"] pub type EnblI3cscl4hvfnPinR = crate :: BitReader ; # [doc = "Field `EnblI3CSCL4HVFnPin` writer - Enable I3C SCL4 HV function pin"] pub type EnblI3cscl4hvfnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblI3CSDA4HVFnPin` reader - Enable I3C SDA4 HV function pin"] pub type EnblI3csda4hvfnPinR = crate :: BitReader ; # [doc = "Field `EnblI3CSDA4HVFnPin` writer - Enable I3C SDA4 HV function pin"] pub type EnblI3csda4hvfnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblSCL11FnPin` reader - Enable SCL11 function pin"] pub type EnblScl11fnPinR = crate :: BitReader ; # [doc = "Field `EnblSCL11FnPin` writer - Enable SCL11 function pin"] pub type EnblScl11fnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblSDA11FnPin` reader - Enable SDA11 function pin"] pub type EnblSda11fnPinR = crate :: BitReader ; # [doc = "Field `EnblSDA11FnPin` writer - Enable SDA11 function pin"] pub type EnblSda11fnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblSCL12FnPin` reader - Enable SCL12 function pin"] pub type EnblScl12fnPinR = crate :: BitReader ; # [doc = "Field `EnblSCL12FnPin` writer - Enable SCL12 function pin"] pub type EnblScl12fnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblSDA12FnPin` reader - Enable SDA12 function pin"] pub type EnblSda12fnPinR = crate :: BitReader ; # [doc = "Field `EnblSDA12FnPin` writer - Enable SDA12 function pin"] pub type EnblSda12fnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblSCL13FnPin` reader - Enable SCL13 function pin"] pub type EnblScl13fnPinR = crate :: BitReader ; # [doc = "Field `EnblSCL13FnPin` writer - Enable SCL13 function pin"] pub type EnblScl13fnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblSDA13FnPin` reader - Enable SDA13 function pin"] pub type EnblSda13fnPinR = crate :: BitReader ; # [doc = "Field `EnblSDA13FnPin` writer - Enable SDA13 function pin"] pub type EnblSda13fnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblSCL14FnPin` reader - Enable SCL14 function pin"] pub type EnblScl14fnPinR = crate :: BitReader ; # [doc = "Field `EnblSCL14FnPin` writer - Enable SCL14 function pin"] pub type EnblScl14fnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblSDA14FnPin` reader - Enable SDA14 function pin"] pub type EnblSda14fnPinR = crate :: BitReader ; # [doc = "Field `EnblSDA14FnPin` writer - Enable SDA14 function pin"] pub type EnblSda14fnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; impl R { # [doc = "Bits 0:7 - Reserved"] # [inline (always)] pub fn reserved1 (& self) -> Reserved1R { Reserved1R :: new ((self . bits & 0xff) as u8) } # [doc = "Bit 8 - Enable I3C SCL1 HV function pin"] # [inline (always)] pub fn enbl_i3cscl1hvfn_pin (& self) -> EnblI3cscl1hvfnPinR { EnblI3cscl1hvfnPinR :: new (((self . bits >> 8) & 1) != 0) } # [doc = "Bit 9 - Enable I3C SDA1 HV function pin"] # [inline (always)] pub fn enbl_i3csda1hvfn_pin (& self) -> EnblI3csda1hvfnPinR { EnblI3csda1hvfnPinR :: new (((self . bits >> 9) & 1) != 0) } # [doc = "Bit 10 - Enable I3C SCL2 HV function pin"] # [inline (always)] pub fn enbl_i3cscl2hvfn_pin (& self) -> EnblI3cscl2hvfnPinR { EnblI3cscl2hvfnPinR :: new (((self . bits >> 10) & 1) != 0) } # [doc = "Bit 11 - Enable I3C SDA2 HV function pin"] # [inline (always)] pub fn enbl_i3csda2hvfn_pin (& self) -> EnblI3csda2hvfnPinR { EnblI3csda2hvfnPinR :: new (((self . bits >> 11) & 1) != 0) } # [doc = "Bit 12 - Enable I3C SCL3 HV function pin"] # [inline (always)] pub fn enbl_i3cscl3hvfn_pin (& self) -> EnblI3cscl3hvfnPinR { EnblI3cscl3hvfnPinR :: new (((self . bits >> 12) & 1) != 0) } # [doc = "Bit 13 - Enable I3C SDA3 HV function pin"] # [inline (always)] pub fn enbl_i3csda3hvfn_pin (& self) -> EnblI3csda3hvfnPinR { EnblI3csda3hvfnPinR :: new (((self . bits >> 13) & 1) != 0) } # [doc = "Bit 14 - Enable I3C SCL4 HV function pin"] # [inline (always)] pub fn enbl_i3cscl4hvfn_pin (& self) -> EnblI3cscl4hvfnPinR { EnblI3cscl4hvfnPinR :: new (((self . bits >> 14) & 1) != 0) } # [doc = "Bit 15 - Enable I3C SDA4 HV function pin"] # [inline (always)] pub fn enbl_i3csda4hvfn_pin (& self) -> EnblI3csda4hvfnPinR { EnblI3csda4hvfnPinR :: new (((self . bits >> 15) & 1) != 0) } # [doc = "Bit 16 - Enable SCL11 function pin"] # [inline (always)] pub fn enbl_scl11fn_pin (& self) -> EnblScl11fnPinR { EnblScl11fnPinR :: new (((self . bits >> 16) & 1) != 0) } # [doc = "Bit 17 - Enable SDA11 function pin"] # [inline (always)] pub fn enbl_sda11fn_pin (& self) -> EnblSda11fnPinR { EnblSda11fnPinR :: new (((self . bits >> 17) & 1) != 0) } # [doc = "Bit 18 - Enable SCL12 function pin"] # [inline (always)] pub fn enbl_scl12fn_pin (& self) -> EnblScl12fnPinR { EnblScl12fnPinR :: new (((self . bits >> 18) & 1) != 0) } # [doc = "Bit 19 - Enable SDA12 function pin"] # [inline (always)] pub fn enbl_sda12fn_pin (& self) -> EnblSda12fnPinR { EnblSda12fnPinR :: new (((self . bits >> 19) & 1) != 0) } # [doc = "Bit 20 - Enable SCL13 function pin"] # [inline (always)] pub fn enbl_scl13fn_pin (& self) -> EnblScl13fnPinR { EnblScl13fnPinR :: new (((self . bits >> 20) & 1) != 0) } # [doc = "Bit 21 - Enable SDA13 function pin"] # [inline (always)] pub fn enbl_sda13fn_pin (& self) -> EnblSda13fnPinR { EnblSda13fnPinR :: new (((self . bits >> 21) & 1) != 0) } # [doc = "Bit 22 - Enable SCL14 function pin"] # [inline (always)] pub fn enbl_scl14fn_pin (& self) -> EnblScl14fnPinR { EnblScl14fnPinR :: new (((self . bits >> 22) & 1) != 0) } # [doc = "Bit 23 - Enable SDA14 function pin"] # [inline (always)] pub fn enbl_sda14fn_pin (& self) -> EnblSda14fnPinR { EnblSda14fnPinR :: new (((self . bits >> 23) & 1) != 0) } } impl W { # [doc = "Bits 0:7 - Reserved"] # [inline (always)] pub fn reserved1 (& mut self) -> Reserved1W < Scu4b8Spec > { Reserved1W :: new (self , 0) } # [doc = "Bit 8 - Enable I3C SCL1 HV function pin"] # [inline (always)] pub fn enbl_i3cscl1hvfn_pin (& mut self) -> EnblI3cscl1hvfnPinW < Scu4b8Spec > { EnblI3cscl1hvfnPinW :: new (self , 8) } # [doc = "Bit 9 - Enable I3C SDA1 HV function pin"] # [inline (always)] pub fn enbl_i3csda1hvfn_pin (& mut self) -> EnblI3csda1hvfnPinW < Scu4b8Spec > { EnblI3csda1hvfnPinW :: new (self , 9) } # [doc = "Bit 10 - Enable I3C SCL2 HV function pin"] # [inline (always)] pub fn enbl_i3cscl2hvfn_pin (& mut self) -> EnblI3cscl2hvfnPinW < Scu4b8Spec > { EnblI3cscl2hvfnPinW :: new (self , 10) } # [doc = "Bit 11 - Enable I3C SDA2 HV function pin"] # [inline (always)] pub fn enbl_i3csda2hvfn_pin (& mut self) -> EnblI3csda2hvfnPinW < Scu4b8Spec > { EnblI3csda2hvfnPinW :: new (self , 11) } # [doc = "Bit 12 - Enable I3C SCL3 HV function pin"] # [inline (always)] pub fn enbl_i3cscl3hvfn_pin (& mut self) -> EnblI3cscl3hvfnPinW < Scu4b8Spec > { EnblI3cscl3hvfnPinW :: new (self , 12) } # [doc = "Bit 13 - Enable I3C SDA3 HV function pin"] # [inline (always)] pub fn enbl_i3csda3hvfn_pin (& mut self) -> EnblI3csda3hvfnPinW < Scu4b8Spec > { EnblI3csda3hvfnPinW :: new (self , 13) } # [doc = "Bit 14 - Enable I3C SCL4 HV function pin"] # [inline (always)] pub fn enbl_i3cscl4hvfn_pin (& mut self) -> EnblI3cscl4hvfnPinW < Scu4b8Spec > { EnblI3cscl4hvfnPinW :: new (self , 14) } # [doc = "Bit 15 - Enable I3C SDA4 HV function pin"] # [inline (always)] pub fn enbl_i3csda4hvfn_pin (& mut self) -> EnblI3csda4hvfnPinW < Scu4b8Spec > { EnblI3csda4hvfnPinW :: new (self , 15) } # [doc = "Bit 16 - Enable SCL11 function pin"] # [inline (always)] pub fn enbl_scl11fn_pin (& mut self) -> EnblScl11fnPinW < Scu4b8Spec > { EnblScl11fnPinW :: new (self , 16) } # [doc = "Bit 17 - Enable SDA11 function pin"] # [inline (always)] pub fn enbl_sda11fn_pin (& mut self) -> EnblSda11fnPinW < Scu4b8Spec > { EnblSda11fnPinW :: new (self , 17) } # [doc = "Bit 18 - Enable SCL12 function pin"] # [inline (always)] pub fn enbl_scl12fn_pin (& mut self) -> EnblScl12fnPinW < Scu4b8Spec > { EnblScl12fnPinW :: new (self , 18) } # [doc = "Bit 19 - Enable SDA12 function pin"] # [inline (always)] pub fn enbl_sda12fn_pin (& mut self) -> EnblSda12fnPinW < Scu4b8Spec > { EnblSda12fnPinW :: new (self , 19) } # [doc = "Bit 20 - Enable SCL13 function pin"] # [inline (always)] pub fn enbl_scl13fn_pin (& mut self) -> EnblScl13fnPinW < Scu4b8Spec > { EnblScl13fnPinW :: new (self , 20) } # [doc = "Bit 21 - Enable SDA13 function pin"] # [inline (always)] pub fn enbl_sda13fn_pin (& mut self) -> EnblSda13fnPinW < Scu4b8Spec > { EnblSda13fnPinW :: new (self , 21) } # [doc = "Bit 22 - Enable SCL14 function pin"] # [inline (always)] pub fn enbl_scl14fn_pin (& mut self) -> EnblScl14fnPinW < Scu4b8Spec > { EnblScl14fnPinW :: new (self , 22) } # [doc = "Bit 23 - Enable SDA14 function pin"] # [inline (always)] pub fn enbl_sda14fn_pin (& mut self) -> EnblSda14fnPinW < Scu4b8Spec > { EnblSda14fnPinW :: new (self , 23) } } # [doc = "Multi-function Pin Control \\#15\n\nYou can [`read`](crate::Reg::read) this register and get [`scu4b8::R`](R). You can [`reset`](crate::Reg::reset), [`write`](crate::Reg::write), [`write_with_zero`](crate::Reg::write_with_zero) this register using [`scu4b8::W`](W). You can also [`modify`](crate::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct Scu4b8Spec ; impl crate :: RegisterSpec for Scu4b8Spec { type Ux = u32 ; } # [doc = "`read()` method returns [`scu4b8::R`](R) reader structure"] impl crate :: Readable for Scu4b8Spec { } # [doc = "`write(|w| ..)` method takes [`scu4b8::W`](W) writer structure"] impl crate :: Writable for Scu4b8Spec { type Safety = crate :: Unsafe ; } # [doc = "`reset()` method sets SCU4B8 to value 0"] impl crate :: Resettable for Scu4b8Spec { }