# [doc = "Register `SCU61C` reader"] pub type R = crate :: R < Scu61cSpec > ; # [doc = "Register `SCU61C` writer"] pub type W = crate :: W < Scu61cSpec > ; # [doc = "Field `DisGPIOM0IntPullDown` reader - Disable GPIOM0 Internal Pull-Down"] pub type DisGpiom0intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOM0IntPullDown` writer - Disable GPIOM0 Internal Pull-Down"] pub type DisGpiom0intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOM1IntPullDown` reader - Disable GPIOM1 Internal Pull-Down"] pub type DisGpiom1intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOM1IntPullDown` writer - Disable GPIOM1 Internal Pull-Down"] pub type DisGpiom1intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOM2IntPullDown` reader - Disable GPIOM2 Internal Pull-Down"] pub type DisGpiom2intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOM2IntPullDown` writer - Disable GPIOM2 Internal Pull-Down"] pub type DisGpiom2intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOM3IntPullDown` reader - Disable GPIOM3 Internal Pull-Down"] pub type DisGpiom3intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOM3IntPullDown` writer - Disable GPIOM3 Internal Pull-Down"] pub type DisGpiom3intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOM4IntPullDown` reader - Disable GPIOM4 Internal Pull-Down"] pub type DisGpiom4intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOM4IntPullDown` writer - Disable GPIOM4 Internal Pull-Down"] pub type DisGpiom4intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOM5IntPullDown` reader - Disable GPIOM5 Internal Pull-Down"] pub type DisGpiom5intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOM5IntPullDown` writer - Disable GPIOM5 Internal Pull-Down"] pub type DisGpiom5intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOM6IntPullDown` reader - Disable GPIOM6 Internal Pull-Down"] pub type DisGpiom6intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOM6IntPullDown` writer - Disable GPIOM6 Internal Pull-Down"] pub type DisGpiom6intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOM7IntPullDown` reader - Disable GPIOM7 Internal Pull-Down"] pub type DisGpiom7intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOM7IntPullDown` writer - Disable GPIOM7 Internal Pull-Down"] pub type DisGpiom7intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPION0IntPullDown` reader - Disable GPION0 Internal Pull-Down"] pub type DisGpion0intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPION0IntPullDown` writer - Disable GPION0 Internal Pull-Down"] pub type DisGpion0intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPION1IntPullDown` reader - Disable GPION1 Internal Pull-Down"] pub type DisGpion1intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPION1IntPullDown` writer - Disable GPION1 Internal Pull-Down"] pub type DisGpion1intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPION2IntPullDown` reader - Disable GPION2 Internal Pull-Down"] pub type DisGpion2intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPION2IntPullDown` writer - Disable GPION2 Internal Pull-Down"] pub type DisGpion2intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPION3IntPullDown` reader - Disable GPION3 Internal Pull-Down"] pub type DisGpion3intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPION3IntPullDown` writer - Disable GPION3 Internal Pull-Down"] pub type DisGpion3intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOO4IntPullDown` reader - Disable GPIOO4 Internal Pull-Down"] pub type DisGpioo4intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOO4IntPullDown` writer - Disable GPIOO4 Internal Pull-Down"] pub type DisGpioo4intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOO5IntPullDown` reader - Disable GPIOO5 Internal Pull-Down"] pub type DisGpioo5intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOO5IntPullDown` writer - Disable GPIOO5 Internal Pull-Down"] pub type DisGpioo5intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOO6IntPullDown` reader - Disable GPIOO6 Internal Pull-Down"] pub type DisGpioo6intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOO6IntPullDown` writer - Disable GPIOO6 Internal Pull-Down"] pub type DisGpioo6intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOO7IntPullDown` reader - Disable GPIOO7 Internal Pull-Down"] pub type DisGpioo7intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOO7IntPullDown` writer - Disable GPIOO7 Internal Pull-Down"] pub type DisGpioo7intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOP0IntPullDown` reader - Disable GPIOP0 Internal Pull-Down"] pub type DisGpiop0intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOP0IntPullDown` writer - Disable GPIOP0 Internal Pull-Down"] pub type DisGpiop0intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOP1IntPullDown` reader - Disable GPIOP1 Internal Pull-Down"] pub type DisGpiop1intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOP1IntPullDown` writer - Disable GPIOP1 Internal Pull-Down"] pub type DisGpiop1intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOP2IntPullDown` reader - Disable GPIOP2 Internal Pull-Down"] pub type DisGpiop2intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOP2IntPullDown` writer - Disable GPIOP2 Internal Pull-Down"] pub type DisGpiop2intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOP3IntPullDown` reader - Disable GPIOP3 Internal Pull-Down"] pub type DisGpiop3intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOP3IntPullDown` writer - Disable GPIOP3 Internal Pull-Down"] pub type DisGpiop3intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOP4IntPullDown` reader - Disable GPIOP4 Internal Pull-Down"] pub type DisGpiop4intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOP4IntPullDown` writer - Disable GPIOP4 Internal Pull-Down"] pub type DisGpiop4intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOP5IntPullDown` reader - Disable GPIOP5 Internal Pull-Down"] pub type DisGpiop5intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOP5IntPullDown` writer - Disable GPIOP5 Internal Pull-Down"] pub type DisGpiop5intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOP6IntPullDown` reader - Disable GPIOP6 Internal Pull-Down"] pub type DisGpiop6intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOP6IntPullDown` writer - Disable GPIOP6 Internal Pull-Down"] pub type DisGpiop6intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `DisGPIOP7IntPullDown` reader - Disable GPIOP7 Internal Pull-Down"] pub type DisGpiop7intPullDownR = crate :: BitReader ; # [doc = "Field `DisGPIOP7IntPullDown` writer - Disable GPIOP7 Internal Pull-Down"] pub type DisGpiop7intPullDownW < 'a , REG > = crate :: BitWriter < 'a , REG > ; impl R { # [doc = "Bit 0 - Disable GPIOM0 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiom0int_pull_down (& self) -> DisGpiom0intPullDownR { DisGpiom0intPullDownR :: new ((self . bits & 1) != 0) } # [doc = "Bit 1 - Disable GPIOM1 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiom1int_pull_down (& self) -> DisGpiom1intPullDownR { DisGpiom1intPullDownR :: new (((self . bits >> 1) & 1) != 0) } # [doc = "Bit 2 - Disable GPIOM2 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiom2int_pull_down (& self) -> DisGpiom2intPullDownR { DisGpiom2intPullDownR :: new (((self . bits >> 2) & 1) != 0) } # [doc = "Bit 3 - Disable GPIOM3 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiom3int_pull_down (& self) -> DisGpiom3intPullDownR { DisGpiom3intPullDownR :: new (((self . bits >> 3) & 1) != 0) } # [doc = "Bit 4 - Disable GPIOM4 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiom4int_pull_down (& self) -> DisGpiom4intPullDownR { DisGpiom4intPullDownR :: new (((self . bits >> 4) & 1) != 0) } # [doc = "Bit 5 - Disable GPIOM5 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiom5int_pull_down (& self) -> DisGpiom5intPullDownR { DisGpiom5intPullDownR :: new (((self . bits >> 5) & 1) != 0) } # [doc = "Bit 6 - Disable GPIOM6 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiom6int_pull_down (& self) -> DisGpiom6intPullDownR { DisGpiom6intPullDownR :: new (((self . bits >> 6) & 1) != 0) } # [doc = "Bit 7 - Disable GPIOM7 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiom7int_pull_down (& self) -> DisGpiom7intPullDownR { DisGpiom7intPullDownR :: new (((self . bits >> 7) & 1) != 0) } # [doc = "Bit 8 - Disable GPION0 Internal Pull-Down"] # [inline (always)] pub fn dis_gpion0int_pull_down (& self) -> DisGpion0intPullDownR { DisGpion0intPullDownR :: new (((self . bits >> 8) & 1) != 0) } # [doc = "Bit 9 - Disable GPION1 Internal Pull-Down"] # [inline (always)] pub fn dis_gpion1int_pull_down (& self) -> DisGpion1intPullDownR { DisGpion1intPullDownR :: new (((self . bits >> 9) & 1) != 0) } # [doc = "Bit 10 - Disable GPION2 Internal Pull-Down"] # [inline (always)] pub fn dis_gpion2int_pull_down (& self) -> DisGpion2intPullDownR { DisGpion2intPullDownR :: new (((self . bits >> 10) & 1) != 0) } # [doc = "Bit 11 - Disable GPION3 Internal Pull-Down"] # [inline (always)] pub fn dis_gpion3int_pull_down (& self) -> DisGpion3intPullDownR { DisGpion3intPullDownR :: new (((self . bits >> 11) & 1) != 0) } # [doc = "Bit 20 - Disable GPIOO4 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioo4int_pull_down (& self) -> DisGpioo4intPullDownR { DisGpioo4intPullDownR :: new (((self . bits >> 20) & 1) != 0) } # [doc = "Bit 21 - Disable GPIOO5 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioo5int_pull_down (& self) -> DisGpioo5intPullDownR { DisGpioo5intPullDownR :: new (((self . bits >> 21) & 1) != 0) } # [doc = "Bit 22 - Disable GPIOO6 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioo6int_pull_down (& self) -> DisGpioo6intPullDownR { DisGpioo6intPullDownR :: new (((self . bits >> 22) & 1) != 0) } # [doc = "Bit 23 - Disable GPIOO7 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioo7int_pull_down (& self) -> DisGpioo7intPullDownR { DisGpioo7intPullDownR :: new (((self . bits >> 23) & 1) != 0) } # [doc = "Bit 24 - Disable GPIOP0 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiop0int_pull_down (& self) -> DisGpiop0intPullDownR { DisGpiop0intPullDownR :: new (((self . bits >> 24) & 1) != 0) } # [doc = "Bit 25 - Disable GPIOP1 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiop1int_pull_down (& self) -> DisGpiop1intPullDownR { DisGpiop1intPullDownR :: new (((self . bits >> 25) & 1) != 0) } # [doc = "Bit 26 - Disable GPIOP2 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiop2int_pull_down (& self) -> DisGpiop2intPullDownR { DisGpiop2intPullDownR :: new (((self . bits >> 26) & 1) != 0) } # [doc = "Bit 27 - Disable GPIOP3 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiop3int_pull_down (& self) -> DisGpiop3intPullDownR { DisGpiop3intPullDownR :: new (((self . bits >> 27) & 1) != 0) } # [doc = "Bit 28 - Disable GPIOP4 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiop4int_pull_down (& self) -> DisGpiop4intPullDownR { DisGpiop4intPullDownR :: new (((self . bits >> 28) & 1) != 0) } # [doc = "Bit 29 - Disable GPIOP5 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiop5int_pull_down (& self) -> DisGpiop5intPullDownR { DisGpiop5intPullDownR :: new (((self . bits >> 29) & 1) != 0) } # [doc = "Bit 30 - Disable GPIOP6 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiop6int_pull_down (& self) -> DisGpiop6intPullDownR { DisGpiop6intPullDownR :: new (((self . bits >> 30) & 1) != 0) } # [doc = "Bit 31 - Disable GPIOP7 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiop7int_pull_down (& self) -> DisGpiop7intPullDownR { DisGpiop7intPullDownR :: new (((self . bits >> 31) & 1) != 0) } } impl W { # [doc = "Bit 0 - Disable GPIOM0 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiom0int_pull_down (& mut self) -> DisGpiom0intPullDownW < Scu61cSpec > { DisGpiom0intPullDownW :: new (self , 0) } # [doc = "Bit 1 - Disable GPIOM1 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiom1int_pull_down (& mut self) -> DisGpiom1intPullDownW < Scu61cSpec > { DisGpiom1intPullDownW :: new (self , 1) } # [doc = "Bit 2 - Disable GPIOM2 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiom2int_pull_down (& mut self) -> DisGpiom2intPullDownW < Scu61cSpec > { DisGpiom2intPullDownW :: new (self , 2) } # [doc = "Bit 3 - Disable GPIOM3 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiom3int_pull_down (& mut self) -> DisGpiom3intPullDownW < Scu61cSpec > { DisGpiom3intPullDownW :: new (self , 3) } # [doc = "Bit 4 - Disable GPIOM4 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiom4int_pull_down (& mut self) -> DisGpiom4intPullDownW < Scu61cSpec > { DisGpiom4intPullDownW :: new (self , 4) } # [doc = "Bit 5 - Disable GPIOM5 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiom5int_pull_down (& mut self) -> DisGpiom5intPullDownW < Scu61cSpec > { DisGpiom5intPullDownW :: new (self , 5) } # [doc = "Bit 6 - Disable GPIOM6 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiom6int_pull_down (& mut self) -> DisGpiom6intPullDownW < Scu61cSpec > { DisGpiom6intPullDownW :: new (self , 6) } # [doc = "Bit 7 - Disable GPIOM7 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiom7int_pull_down (& mut self) -> DisGpiom7intPullDownW < Scu61cSpec > { DisGpiom7intPullDownW :: new (self , 7) } # [doc = "Bit 8 - Disable GPION0 Internal Pull-Down"] # [inline (always)] pub fn dis_gpion0int_pull_down (& mut self) -> DisGpion0intPullDownW < Scu61cSpec > { DisGpion0intPullDownW :: new (self , 8) } # [doc = "Bit 9 - Disable GPION1 Internal Pull-Down"] # [inline (always)] pub fn dis_gpion1int_pull_down (& mut self) -> DisGpion1intPullDownW < Scu61cSpec > { DisGpion1intPullDownW :: new (self , 9) } # [doc = "Bit 10 - Disable GPION2 Internal Pull-Down"] # [inline (always)] pub fn dis_gpion2int_pull_down (& mut self) -> DisGpion2intPullDownW < Scu61cSpec > { DisGpion2intPullDownW :: new (self , 10) } # [doc = "Bit 11 - Disable GPION3 Internal Pull-Down"] # [inline (always)] pub fn dis_gpion3int_pull_down (& mut self) -> DisGpion3intPullDownW < Scu61cSpec > { DisGpion3intPullDownW :: new (self , 11) } # [doc = "Bit 20 - Disable GPIOO4 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioo4int_pull_down (& mut self) -> DisGpioo4intPullDownW < Scu61cSpec > { DisGpioo4intPullDownW :: new (self , 20) } # [doc = "Bit 21 - Disable GPIOO5 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioo5int_pull_down (& mut self) -> DisGpioo5intPullDownW < Scu61cSpec > { DisGpioo5intPullDownW :: new (self , 21) } # [doc = "Bit 22 - Disable GPIOO6 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioo6int_pull_down (& mut self) -> DisGpioo6intPullDownW < Scu61cSpec > { DisGpioo6intPullDownW :: new (self , 22) } # [doc = "Bit 23 - Disable GPIOO7 Internal Pull-Down"] # [inline (always)] pub fn dis_gpioo7int_pull_down (& mut self) -> DisGpioo7intPullDownW < Scu61cSpec > { DisGpioo7intPullDownW :: new (self , 23) } # [doc = "Bit 24 - Disable GPIOP0 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiop0int_pull_down (& mut self) -> DisGpiop0intPullDownW < Scu61cSpec > { DisGpiop0intPullDownW :: new (self , 24) } # [doc = "Bit 25 - Disable GPIOP1 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiop1int_pull_down (& mut self) -> DisGpiop1intPullDownW < Scu61cSpec > { DisGpiop1intPullDownW :: new (self , 25) } # [doc = "Bit 26 - Disable GPIOP2 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiop2int_pull_down (& mut self) -> DisGpiop2intPullDownW < Scu61cSpec > { DisGpiop2intPullDownW :: new (self , 26) } # [doc = "Bit 27 - Disable GPIOP3 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiop3int_pull_down (& mut self) -> DisGpiop3intPullDownW < Scu61cSpec > { DisGpiop3intPullDownW :: new (self , 27) } # [doc = "Bit 28 - Disable GPIOP4 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiop4int_pull_down (& mut self) -> DisGpiop4intPullDownW < Scu61cSpec > { DisGpiop4intPullDownW :: new (self , 28) } # [doc = "Bit 29 - Disable GPIOP5 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiop5int_pull_down (& mut self) -> DisGpiop5intPullDownW < Scu61cSpec > { DisGpiop5intPullDownW :: new (self , 29) } # [doc = "Bit 30 - Disable GPIOP6 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiop6int_pull_down (& mut self) -> DisGpiop6intPullDownW < Scu61cSpec > { DisGpiop6intPullDownW :: new (self , 30) } # [doc = "Bit 31 - Disable GPIOP7 Internal Pull-Down"] # [inline (always)] pub fn dis_gpiop7int_pull_down (& mut self) -> DisGpiop7intPullDownW < Scu61cSpec > { DisGpiop7intPullDownW :: new (self , 31) } } # [doc = "Disable GPIO Internal Pull-Down \\#3\n\nYou can [`read`](crate::Reg::read) this register and get [`scu61c::R`](R). You can [`reset`](crate::Reg::reset), [`write`](crate::Reg::write), [`write_with_zero`](crate::Reg::write_with_zero) this register using [`scu61c::W`](W). You can also [`modify`](crate::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct Scu61cSpec ; impl crate :: RegisterSpec for Scu61cSpec { type Ux = u32 ; } # [doc = "`read()` method returns [`scu61c::R`](R) reader structure"] impl crate :: Readable for Scu61cSpec { } # [doc = "`write(|w| ..)` method takes [`scu61c::W`](W) writer structure"] impl crate :: Writable for Scu61cSpec { type Safety = crate :: Unsafe ; } # [doc = "`reset()` method sets SCU61C to value 0"] impl crate :: Resettable for Scu61cSpec { }