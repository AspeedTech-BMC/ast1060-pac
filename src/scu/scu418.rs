# [doc = "Register `SCU418` reader"] pub type R = crate :: R < Scu418Spec > ; # [doc = "Register `SCU418` writer"] pub type W = crate :: W < Scu418Spec > ; # [doc = "Field `EnblSCL3FnPin` reader - Enable SCL3 function pin"] pub type EnblScl3fnPinR = crate :: BitReader ; # [doc = "Field `EnblSCL3FnPin` writer - Enable SCL3 function pin"] pub type EnblScl3fnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblSDA3FnPin` reader - Enable SDA3 function pin"] pub type EnblSda3fnPinR = crate :: BitReader ; # [doc = "Field `EnblSDA3FnPin` writer - Enable SDA3 function pin"] pub type EnblSda3fnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblSCL4FnPin` reader - Enable SCL4 function pin"] pub type EnblScl4fnPinR = crate :: BitReader ; # [doc = "Field `EnblSCL4FnPin` writer - Enable SCL4 function pin"] pub type EnblScl4fnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblSDA4FnPin` reader - Enable SDA4 function pin"] pub type EnblSda4fnPinR = crate :: BitReader ; # [doc = "Field `EnblSDA4FnPin` writer - Enable SDA4 function pin"] pub type EnblSda4fnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblSCL5FnPin` reader - Enable SCL5 function pin"] pub type EnblScl5fnPinR = crate :: BitReader ; # [doc = "Field `EnblSCL5FnPin` writer - Enable SCL5 function pin"] pub type EnblScl5fnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblSDA5FnPin` reader - Enable SDA5 function pin"] pub type EnblSda5fnPinR = crate :: BitReader ; # [doc = "Field `EnblSDA5FnPin` writer - Enable SDA5 function pin"] pub type EnblSda5fnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblSCL6FnPin` reader - Enable SCL6 function pin"] pub type EnblScl6fnPinR = crate :: BitReader ; # [doc = "Field `EnblSCL6FnPin` writer - Enable SCL6 function pin"] pub type EnblScl6fnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblSDA6FnPin` reader - Enable SDA6 function pin"] pub type EnblSda6fnPinR = crate :: BitReader ; # [doc = "Field `EnblSDA6FnPin` writer - Enable SDA6 function pin"] pub type EnblSda6fnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblSCL7FnPin` reader - Enable SCL7 function pin"] pub type EnblScl7fnPinR = crate :: BitReader ; # [doc = "Field `EnblSCL7FnPin` writer - Enable SCL7 function pin"] pub type EnblScl7fnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblSDA7FnPin` reader - Enable SDA7 function pin"] pub type EnblSda7fnPinR = crate :: BitReader ; # [doc = "Field `EnblSDA7FnPin` writer - Enable SDA7 function pin"] pub type EnblSda7fnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblSCL8FnPin` reader - Enable SCL8 function pin"] pub type EnblScl8fnPinR = crate :: BitReader ; # [doc = "Field `EnblSCL8FnPin` writer - Enable SCL8 function pin"] pub type EnblScl8fnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblSDA8FnPin` reader - Enable SDA8 function pin"] pub type EnblSda8fnPinR = crate :: BitReader ; # [doc = "Field `EnblSDA8FnPin` writer - Enable SDA8 function pin"] pub type EnblSda8fnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblSCL9FnPin` reader - Enable SCL9 function pin"] pub type EnblScl9fnPinR = crate :: BitReader ; # [doc = "Field `EnblSCL9FnPin` writer - Enable SCL9 function pin"] pub type EnblScl9fnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblSDA9FnPin` reader - Enable SDA9 function pin"] pub type EnblSda9fnPinR = crate :: BitReader ; # [doc = "Field `EnblSDA9FnPin` writer - Enable SDA9 function pin"] pub type EnblSda9fnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblSCL10FnPin` reader - Enable SCL10 function pin"] pub type EnblScl10fnPinR = crate :: BitReader ; # [doc = "Field `EnblSCL10FnPin` writer - Enable SCL10 function pin"] pub type EnblScl10fnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblSDA10FnPin` reader - Enable SDA10 function pin"] pub type EnblSda10fnPinR = crate :: BitReader ; # [doc = "Field `EnblSDA10FnPin` writer - Enable SDA10 function pin"] pub type EnblSda10fnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblI3CSCL1LVFnPin` reader - Enable I3C SCL1 LV function pin"] pub type EnblI3cscl1lvfnPinR = crate :: BitReader ; # [doc = "Field `EnblI3CSCL1LVFnPin` writer - Enable I3C SCL1 LV function pin"] pub type EnblI3cscl1lvfnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblI3CSDA1LVFnPin` reader - Enable I3C SDA1 LV function pin"] pub type EnblI3csda1lvfnPinR = crate :: BitReader ; # [doc = "Field `EnblI3CSDA1LVFnPin` writer - Enable I3C SDA1 LV function pin"] pub type EnblI3csda1lvfnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblI3CSCL2LVFnPin` reader - Enable I3C SCL2 LV function pin"] pub type EnblI3cscl2lvfnPinR = crate :: BitReader ; # [doc = "Field `EnblI3CSCL2LVFnPin` writer - Enable I3C SCL2 LV function pin"] pub type EnblI3cscl2lvfnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblI3CSDA2LVFnPin` reader - Enable I3C SDA2 LV function pin"] pub type EnblI3csda2lvfnPinR = crate :: BitReader ; # [doc = "Field `EnblI3CSDA2LVFnPin` writer - Enable I3C SDA2 LV function pin"] pub type EnblI3csda2lvfnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblI3CSCL3LVFnPin` reader - Enable I3C SCL3 LV function pin"] pub type EnblI3cscl3lvfnPinR = crate :: BitReader ; # [doc = "Field `EnblI3CSCL3LVFnPin` writer - Enable I3C SCL3 LV function pin"] pub type EnblI3cscl3lvfnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblI3CSDA3LVFnPin` reader - Enable I3C SDA3 LV function pin"] pub type EnblI3csda3lvfnPinR = crate :: BitReader ; # [doc = "Field `EnblI3CSDA3LVFnPin` writer - Enable I3C SDA3 LV function pin"] pub type EnblI3csda3lvfnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblI3CSCL4LVFnPin` reader - Enable I3C SCL4 LV function pin"] pub type EnblI3cscl4lvfnPinR = crate :: BitReader ; # [doc = "Field `EnblI3CSCL4LVFnPin` writer - Enable I3C SCL4 LV function pin"] pub type EnblI3cscl4lvfnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; # [doc = "Field `EnblI3CSDA4LVFnPin` reader - Enable I3C SDA4 LV function pin"] pub type EnblI3csda4lvfnPinR = crate :: BitReader ; # [doc = "Field `EnblI3CSDA4LVFnPin` writer - Enable I3C SDA4 LV function pin"] pub type EnblI3csda4lvfnPinW < 'a , REG > = crate :: BitWriter < 'a , REG > ; impl R { # [doc = "Bit 0 - Enable SCL3 function pin"] # [inline (always)] pub fn enbl_scl3fn_pin (& self) -> EnblScl3fnPinR { EnblScl3fnPinR :: new ((self . bits & 1) != 0) } # [doc = "Bit 1 - Enable SDA3 function pin"] # [inline (always)] pub fn enbl_sda3fn_pin (& self) -> EnblSda3fnPinR { EnblSda3fnPinR :: new (((self . bits >> 1) & 1) != 0) } # [doc = "Bit 2 - Enable SCL4 function pin"] # [inline (always)] pub fn enbl_scl4fn_pin (& self) -> EnblScl4fnPinR { EnblScl4fnPinR :: new (((self . bits >> 2) & 1) != 0) } # [doc = "Bit 3 - Enable SDA4 function pin"] # [inline (always)] pub fn enbl_sda4fn_pin (& self) -> EnblSda4fnPinR { EnblSda4fnPinR :: new (((self . bits >> 3) & 1) != 0) } # [doc = "Bit 4 - Enable SCL5 function pin"] # [inline (always)] pub fn enbl_scl5fn_pin (& self) -> EnblScl5fnPinR { EnblScl5fnPinR :: new (((self . bits >> 4) & 1) != 0) } # [doc = "Bit 5 - Enable SDA5 function pin"] # [inline (always)] pub fn enbl_sda5fn_pin (& self) -> EnblSda5fnPinR { EnblSda5fnPinR :: new (((self . bits >> 5) & 1) != 0) } # [doc = "Bit 6 - Enable SCL6 function pin"] # [inline (always)] pub fn enbl_scl6fn_pin (& self) -> EnblScl6fnPinR { EnblScl6fnPinR :: new (((self . bits >> 6) & 1) != 0) } # [doc = "Bit 7 - Enable SDA6 function pin"] # [inline (always)] pub fn enbl_sda6fn_pin (& self) -> EnblSda6fnPinR { EnblSda6fnPinR :: new (((self . bits >> 7) & 1) != 0) } # [doc = "Bit 8 - Enable SCL7 function pin"] # [inline (always)] pub fn enbl_scl7fn_pin (& self) -> EnblScl7fnPinR { EnblScl7fnPinR :: new (((self . bits >> 8) & 1) != 0) } # [doc = "Bit 9 - Enable SDA7 function pin"] # [inline (always)] pub fn enbl_sda7fn_pin (& self) -> EnblSda7fnPinR { EnblSda7fnPinR :: new (((self . bits >> 9) & 1) != 0) } # [doc = "Bit 10 - Enable SCL8 function pin"] # [inline (always)] pub fn enbl_scl8fn_pin (& self) -> EnblScl8fnPinR { EnblScl8fnPinR :: new (((self . bits >> 10) & 1) != 0) } # [doc = "Bit 11 - Enable SDA8 function pin"] # [inline (always)] pub fn enbl_sda8fn_pin (& self) -> EnblSda8fnPinR { EnblSda8fnPinR :: new (((self . bits >> 11) & 1) != 0) } # [doc = "Bit 12 - Enable SCL9 function pin"] # [inline (always)] pub fn enbl_scl9fn_pin (& self) -> EnblScl9fnPinR { EnblScl9fnPinR :: new (((self . bits >> 12) & 1) != 0) } # [doc = "Bit 13 - Enable SDA9 function pin"] # [inline (always)] pub fn enbl_sda9fn_pin (& self) -> EnblSda9fnPinR { EnblSda9fnPinR :: new (((self . bits >> 13) & 1) != 0) } # [doc = "Bit 14 - Enable SCL10 function pin"] # [inline (always)] pub fn enbl_scl10fn_pin (& self) -> EnblScl10fnPinR { EnblScl10fnPinR :: new (((self . bits >> 14) & 1) != 0) } # [doc = "Bit 15 - Enable SDA10 function pin"] # [inline (always)] pub fn enbl_sda10fn_pin (& self) -> EnblSda10fnPinR { EnblSda10fnPinR :: new (((self . bits >> 15) & 1) != 0) } # [doc = "Bit 16 - Enable I3C SCL1 LV function pin"] # [inline (always)] pub fn enbl_i3cscl1lvfn_pin (& self) -> EnblI3cscl1lvfnPinR { EnblI3cscl1lvfnPinR :: new (((self . bits >> 16) & 1) != 0) } # [doc = "Bit 17 - Enable I3C SDA1 LV function pin"] # [inline (always)] pub fn enbl_i3csda1lvfn_pin (& self) -> EnblI3csda1lvfnPinR { EnblI3csda1lvfnPinR :: new (((self . bits >> 17) & 1) != 0) } # [doc = "Bit 18 - Enable I3C SCL2 LV function pin"] # [inline (always)] pub fn enbl_i3cscl2lvfn_pin (& self) -> EnblI3cscl2lvfnPinR { EnblI3cscl2lvfnPinR :: new (((self . bits >> 18) & 1) != 0) } # [doc = "Bit 19 - Enable I3C SDA2 LV function pin"] # [inline (always)] pub fn enbl_i3csda2lvfn_pin (& self) -> EnblI3csda2lvfnPinR { EnblI3csda2lvfnPinR :: new (((self . bits >> 19) & 1) != 0) } # [doc = "Bit 20 - Enable I3C SCL3 LV function pin"] # [inline (always)] pub fn enbl_i3cscl3lvfn_pin (& self) -> EnblI3cscl3lvfnPinR { EnblI3cscl3lvfnPinR :: new (((self . bits >> 20) & 1) != 0) } # [doc = "Bit 21 - Enable I3C SDA3 LV function pin"] # [inline (always)] pub fn enbl_i3csda3lvfn_pin (& self) -> EnblI3csda3lvfnPinR { EnblI3csda3lvfnPinR :: new (((self . bits >> 21) & 1) != 0) } # [doc = "Bit 22 - Enable I3C SCL4 LV function pin"] # [inline (always)] pub fn enbl_i3cscl4lvfn_pin (& self) -> EnblI3cscl4lvfnPinR { EnblI3cscl4lvfnPinR :: new (((self . bits >> 22) & 1) != 0) } # [doc = "Bit 23 - Enable I3C SDA4 LV function pin"] # [inline (always)] pub fn enbl_i3csda4lvfn_pin (& self) -> EnblI3csda4lvfnPinR { EnblI3csda4lvfnPinR :: new (((self . bits >> 23) & 1) != 0) } } impl W { # [doc = "Bit 0 - Enable SCL3 function pin"] # [inline (always)] pub fn enbl_scl3fn_pin (& mut self) -> EnblScl3fnPinW < Scu418Spec > { EnblScl3fnPinW :: new (self , 0) } # [doc = "Bit 1 - Enable SDA3 function pin"] # [inline (always)] pub fn enbl_sda3fn_pin (& mut self) -> EnblSda3fnPinW < Scu418Spec > { EnblSda3fnPinW :: new (self , 1) } # [doc = "Bit 2 - Enable SCL4 function pin"] # [inline (always)] pub fn enbl_scl4fn_pin (& mut self) -> EnblScl4fnPinW < Scu418Spec > { EnblScl4fnPinW :: new (self , 2) } # [doc = "Bit 3 - Enable SDA4 function pin"] # [inline (always)] pub fn enbl_sda4fn_pin (& mut self) -> EnblSda4fnPinW < Scu418Spec > { EnblSda4fnPinW :: new (self , 3) } # [doc = "Bit 4 - Enable SCL5 function pin"] # [inline (always)] pub fn enbl_scl5fn_pin (& mut self) -> EnblScl5fnPinW < Scu418Spec > { EnblScl5fnPinW :: new (self , 4) } # [doc = "Bit 5 - Enable SDA5 function pin"] # [inline (always)] pub fn enbl_sda5fn_pin (& mut self) -> EnblSda5fnPinW < Scu418Spec > { EnblSda5fnPinW :: new (self , 5) } # [doc = "Bit 6 - Enable SCL6 function pin"] # [inline (always)] pub fn enbl_scl6fn_pin (& mut self) -> EnblScl6fnPinW < Scu418Spec > { EnblScl6fnPinW :: new (self , 6) } # [doc = "Bit 7 - Enable SDA6 function pin"] # [inline (always)] pub fn enbl_sda6fn_pin (& mut self) -> EnblSda6fnPinW < Scu418Spec > { EnblSda6fnPinW :: new (self , 7) } # [doc = "Bit 8 - Enable SCL7 function pin"] # [inline (always)] pub fn enbl_scl7fn_pin (& mut self) -> EnblScl7fnPinW < Scu418Spec > { EnblScl7fnPinW :: new (self , 8) } # [doc = "Bit 9 - Enable SDA7 function pin"] # [inline (always)] pub fn enbl_sda7fn_pin (& mut self) -> EnblSda7fnPinW < Scu418Spec > { EnblSda7fnPinW :: new (self , 9) } # [doc = "Bit 10 - Enable SCL8 function pin"] # [inline (always)] pub fn enbl_scl8fn_pin (& mut self) -> EnblScl8fnPinW < Scu418Spec > { EnblScl8fnPinW :: new (self , 10) } # [doc = "Bit 11 - Enable SDA8 function pin"] # [inline (always)] pub fn enbl_sda8fn_pin (& mut self) -> EnblSda8fnPinW < Scu418Spec > { EnblSda8fnPinW :: new (self , 11) } # [doc = "Bit 12 - Enable SCL9 function pin"] # [inline (always)] pub fn enbl_scl9fn_pin (& mut self) -> EnblScl9fnPinW < Scu418Spec > { EnblScl9fnPinW :: new (self , 12) } # [doc = "Bit 13 - Enable SDA9 function pin"] # [inline (always)] pub fn enbl_sda9fn_pin (& mut self) -> EnblSda9fnPinW < Scu418Spec > { EnblSda9fnPinW :: new (self , 13) } # [doc = "Bit 14 - Enable SCL10 function pin"] # [inline (always)] pub fn enbl_scl10fn_pin (& mut self) -> EnblScl10fnPinW < Scu418Spec > { EnblScl10fnPinW :: new (self , 14) } # [doc = "Bit 15 - Enable SDA10 function pin"] # [inline (always)] pub fn enbl_sda10fn_pin (& mut self) -> EnblSda10fnPinW < Scu418Spec > { EnblSda10fnPinW :: new (self , 15) } # [doc = "Bit 16 - Enable I3C SCL1 LV function pin"] # [inline (always)] pub fn enbl_i3cscl1lvfn_pin (& mut self) -> EnblI3cscl1lvfnPinW < Scu418Spec > { EnblI3cscl1lvfnPinW :: new (self , 16) } # [doc = "Bit 17 - Enable I3C SDA1 LV function pin"] # [inline (always)] pub fn enbl_i3csda1lvfn_pin (& mut self) -> EnblI3csda1lvfnPinW < Scu418Spec > { EnblI3csda1lvfnPinW :: new (self , 17) } # [doc = "Bit 18 - Enable I3C SCL2 LV function pin"] # [inline (always)] pub fn enbl_i3cscl2lvfn_pin (& mut self) -> EnblI3cscl2lvfnPinW < Scu418Spec > { EnblI3cscl2lvfnPinW :: new (self , 18) } # [doc = "Bit 19 - Enable I3C SDA2 LV function pin"] # [inline (always)] pub fn enbl_i3csda2lvfn_pin (& mut self) -> EnblI3csda2lvfnPinW < Scu418Spec > { EnblI3csda2lvfnPinW :: new (self , 19) } # [doc = "Bit 20 - Enable I3C SCL3 LV function pin"] # [inline (always)] pub fn enbl_i3cscl3lvfn_pin (& mut self) -> EnblI3cscl3lvfnPinW < Scu418Spec > { EnblI3cscl3lvfnPinW :: new (self , 20) } # [doc = "Bit 21 - Enable I3C SDA3 LV function pin"] # [inline (always)] pub fn enbl_i3csda3lvfn_pin (& mut self) -> EnblI3csda3lvfnPinW < Scu418Spec > { EnblI3csda3lvfnPinW :: new (self , 21) } # [doc = "Bit 22 - Enable I3C SCL4 LV function pin"] # [inline (always)] pub fn enbl_i3cscl4lvfn_pin (& mut self) -> EnblI3cscl4lvfnPinW < Scu418Spec > { EnblI3cscl4lvfnPinW :: new (self , 22) } # [doc = "Bit 23 - Enable I3C SDA4 LV function pin"] # [inline (always)] pub fn enbl_i3csda4lvfn_pin (& mut self) -> EnblI3csda4lvfnPinW < Scu418Spec > { EnblI3csda4lvfnPinW :: new (self , 23) } } # [doc = "Multi-function Pin Control \\#3\n\nYou can [`read`](crate::Reg::read) this register and get [`scu418::R`](R). You can [`reset`](crate::Reg::reset), [`write`](crate::Reg::write), [`write_with_zero`](crate::Reg::write_with_zero) this register using [`scu418::W`](W). You can also [`modify`](crate::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct Scu418Spec ; impl crate :: RegisterSpec for Scu418Spec { type Ux = u32 ; } # [doc = "`read()` method returns [`scu418::R`](R) reader structure"] impl crate :: Readable for Scu418Spec { } # [doc = "`write(|w| ..)` method takes [`scu418::W`](W) writer structure"] impl crate :: Writable for Scu418Spec { type Safety = crate :: Unsafe ; } # [doc = "`reset()` method sets SCU418 to value 0x0300_0000"] impl crate :: Resettable for Scu418Spec { const RESET_VALUE : u32 = 0x0300_0000 ; }